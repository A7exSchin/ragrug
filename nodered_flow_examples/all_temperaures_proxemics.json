[{"id":"a3b70a95.71cd58","type":"tab","label":"all temperatures","disabled":false,"info":""},{"id":"4652275c.3b9fa8","type":"function","z":"a3b70a95.71cd58","name":"Create Empty Vis","func":"\n//var nextId = Main_GetNextChartId();\nvar nextId = RT.Help.CreateGuid();\nflow.set(\"VIS0\", nextId);\nflow.set(\"VIS0LastUsed\", 0);\nflow.set(\"VIS0InitDone\", false);\nflow.set(\"VIS0Dist\", -1);\n\nvar chart = RT.VIS.GetNewChartObjectIATK2(\n    nextId, MAIN.usercanvas.charts2.length, \"IATKChart\", 0.3, 0,false);\n\nMAIN.usercanvas.charts2[nextId] = chart;\n\nMAIN.RR.Runtime.ToggleObjManipulation(chart.chartGoName);\nvar bc = MAIN.RR.Runtime.AddBoxCollider(chart.chartGo);\nbc.size = new MAIN.UE.Vector3(0.3, 0.3, 0.3);\n\nmsg.payload = nextId;\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":610,"y":160,"wires":[["386a4687.45339a"]]},{"id":"e7d2d7e6.af5338","type":"inject","z":"a3b70a95.71cd58","name":"A","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"1","topic":"","payload":"0","payloadType":"num","x":250,"y":160,"wires":[["5cf97193.3d6ab"]]},{"id":"386a4687.45339a","type":"function","z":"a3b70a95.71cd58","name":"add dimensions","func":"var chartId = msg.payload;\nvar chart = MAIN.usercanvas.charts2[chartId];\nchart.rtds.AddStringDimension(\"device\");\nchart.rtds.AddDimension(\"temperature\", 0, 100);\nchart.rtds.SetDimensionMinMax(\"device\", 0, 1);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":820,"y":160,"wires":[[]]},{"id":"eae3ac02.fdc14","type":"function","z":"a3b70a95.71cd58","name":"Setup JSON","func":"var visData = \n{\n    \"UID\":\"\",\n    \"VisualisationType\":\"SCATTERPLOT\",\n    \"parallelCoordinatesDimensionsAttributes\":[],\n    \"parallelCoordinatesDimensionsMinFilter\":[],\n    \"parallelCoordinatesDimensionsMaxFilter\":[],\n    \"parallelCoordinatesDimensionsMinScale\":[],\n    \"parallelCoordinatesDimensionsMaxScale\":[],\n    \"Geometry\": 6,\n    \"AxiesKeys\":[0, 1],\n    \"AxiesValues\":[\"device\",\"temperature\"],\n    \"ColourDimension\":\"temperature\",\n    \"SizeDimension\":\"Undefined\",\n    \"LinkingDimension\":\"Undefined\",\n    \"colourKeys\":\n    {\n        \"serializedVersion\":\"2\",\n        \"key0\":{\"r\":0.0,\"g\":1.0,\"b\":0.0,\"a\":1.0},\n        \"key1\":{\"r\":1.0,\"g\":0.0,\"b\":0.0,\"a\":1.0},\n        \"key2\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key3\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key4\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key5\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key6\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key7\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"ctime0\":0,\"ctime1\":65535,\"ctime2\":0,\"ctime3\":0,\"ctime4\":0,\"ctime5\":0,\"ctime6\":0,\"ctime7\":0,\n        \"atime0\":0,\"atime1\":65535,\"atime2\":0,\"atime3\":0,\"atime4\":0,\"atime5\":0,\"atime6\":0,\"atime7\":0,\n        \"m_Mode\":0,\n        \"m_NumColorKeys\":2,\n        \"m_NumAlphaKeys\":2\n    },\n    \"colour\":{\"r\":0.0,\"g\":0.0,\"b\":1.0,\"a\":0.5},\n    \"Size\":0.2,\n    \"MinSize\":0.01,\n    \"MaxSize\":0.2,\n    \"VisualisationWidth\":0.3,\n    \"VisualisationHeight\":0.3,\n    \"VisualisationDepth\":0.3\n};\nmsg.json = visData;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":790,"y":220,"wires":[["9d7c71e1.58914"]]},{"id":"9d7c71e1.58914","type":"function","z":"a3b70a95.71cd58","name":"apply json","func":"var chartId = msg.payload;\nvar chart = MAIN.usercanvas.charts2[chartId];\n\nvar json = JSON.stringify(msg.json);\nchart.vis.theVisualizationObject.creationConfiguration.DeserializeJson(json);\nimportNamespace(\"IATK\").Replicator.SyncVis(chart.vis);\nchart.fctUpdateChart();\nchart.vis.updateProperties();\n\nflow.set(\"VIS0InitDone\", true);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":980,"y":220,"wires":[[]]},{"id":"1abd91e9.7dea3e","type":"inject","z":"a3b70a95.71cd58","name":"A","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"1","topic":"","payload":"0","payloadType":"num","x":250,"y":220,"wires":[["26ace308.9ada2c"]]},{"id":"1f35764c.66e38a","type":"mqtt in","z":"a3b70a95.71cd58","name":"","topic":"telemetry/#","qos":"0","datatype":"auto","broker":"73e9a24f.21590c","x":240,"y":280,"wires":[["cbf1c30a.ad67"]]},{"id":"d1926dbd.9d21f","type":"function","z":"a3b70a95.71cd58","name":"filter for temperature data","func":"\ntry {\n    \n    //search for \"Temperature\" or \"temperature\"\n    var foundStr = \"\";\n    var hasTemp = msg.payload.indexOf(\"temperature\");\n    \n    if(hasTemp < 0) {\n        hasTemp = msg.payload.indexOf(\"Temperature\");\n    }\n    \n    if(hasTemp >= 0) {\n        var s = -1;\n        var e = -1;\n        \n        var i = 0;\n        for(i = hasTemp; i >= 0; i--) {\n            if(msg.payload[i] == \"{\") {\n                s = i;\n                break;\n            }\n        }\n        \n        for(i = hasTemp; i < msg.payload.length; i++) {\n            if(msg.payload[i] == \"}\") {\n                e = i + 1;\n                break;\n            }\n        }\n        \n        if(s > -1 && e > -1) {\n            foundStr = msg.payload.substring(s,e);\n            //node.warn(\"foundStr = \" + s + \" /\" + e + \" => \" + foundStr);\n        }\n    }\n    \n    // send temperature object\n    if(foundStr.length > 0) {\n        msg.payload = foundStr.replace(\"Temperature\",\"temperature\");\n        return msg;\n    }\n} catch(err) {\n    \n}\n\n\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":770,"y":280,"wires":[["6a166621.c416d8"]]},{"id":"fa9ca46f.5c1918","type":"debug","z":"a3b70a95.71cd58","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1210,"y":280,"wires":[]},{"id":"6a166621.c416d8","type":"function","z":"a3b70a95.71cd58","name":"data update","func":"var topic = msg.topic;\nvar data = JSON.parse(msg.payload);\n\nvar temp = data.temperature;\nvar posId = 0;\n\nposId = flow.get(topic);\nvar isNew = false;\nif(posId == 'undefined' || posId == null) {\n    posId = flow.get(\"VIS0LastUsed\");\n    flow.set(\"VIS0LastUsed\", posId + 1);\n    flow.set(topic, posId);\n    isNew = true;\n    node.warn(\"posId=\" + posId + \", \" + topic);\n}\n\nvar chartId = flow.get(\"VIS0\");\ntry {\n    var chart = MAIN.usercanvas.charts2[chartId];\n    if(isNew) {\n        node.warn(\"ADDING new device=\" + posId + \", \" + topic);\n    \n        chart.rtds.SetDimensionMinMax(\"device\", 0, posId+1);\n        chart.rtds.SetDataStrStrById(\"device\", topic, posId);\n        \n        chart.vis.updateProperties();\n        /*\n        chart.vis.UpdateVisualisation(chart.vis.PropertyType.X);\n        chart.vis.UpdateVisualisation(chart.vis.PropertyType.Y);\n        chart.vis.UpdateVisualisation(chart.vis.PropertyType.Z);\n        chart.vis.UpdateVisualisation(chart.vis.PropertyType.SizeValues);\n        chart.vis.UpdateVisualisation(chart.vis.PropertyType.GeometryType);\n        chart.vis.UpdateVisualisation(chart.vis.PropertyType.LinkingDimension);\n        */\n        chart.fctUpdateChart();\n        return msg;\n    }\n    \n    chart.rtds.SetDataStrValById(\"temperature\", temp, posId);\n    //node.warn(\"posId=\" + posId + \", \" + topic + \", temp=\" + temp);\n    chart.vis.updateProperties(); //was not here before for testing\n    chart.fctUpdateChart();\n\n    \n} catch(err) {\n    //node.warn(\"CNR (dataupdate) ERROR => \" + err);\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1010,"y":280,"wires":[["fa9ca46f.5c1918"]]},{"id":"b4b88fa1.546ae","type":"function","z":"a3b70a95.71cd58","name":"get chartid","func":"var chartId = flow.get(\"VIS0\");\nmsg.payload = chartId;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":590,"y":220,"wires":[["eae3ac02.fdc14"]]},{"id":"5cf97193.3d6ab","type":"function","z":"a3b70a95.71cd58","name":"client filter","func":"try {\n    var n = MAIN.usercanvas;\n    return msg;\n} catch(err) {\n    return null;\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":400,"y":160,"wires":[["4652275c.3b9fa8"]]},{"id":"26ace308.9ada2c","type":"function","z":"a3b70a95.71cd58","name":"client filter","func":"try {\n    var n = MAIN.usercanvas;\n    return msg;\n} catch(err) {\n    return null;\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":400,"y":220,"wires":[["b4b88fa1.546ae"]]},{"id":"cbf1c30a.ad67","type":"function","z":"a3b70a95.71cd58","name":"client filter","func":"try {\n    var n = MAIN.usercanvas;\n    return msg;\n} catch(err) {\n    return null;\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":400,"y":280,"wires":[["13056b2b.7c3035"]]},{"id":"13056b2b.7c3035","type":"function","z":"a3b70a95.71cd58","name":"check init","func":"var isInit = flow.get(\"VIS0InitDone\");\nif(!isInit) {\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":560,"y":280,"wires":[["d1926dbd.9d21f"]]},{"id":"30778bbe.6b97e4","type":"inject","z":"a3b70a95.71cd58","name":"A","props":[{"p":"payload"}],"repeat":"1","crontab":"","once":true,"onceDelay":"1","topic":"","payload":"0","payloadType":"num","x":230,"y":460,"wires":[["2954a9b0.8201d6"]]},{"id":"2954a9b0.8201d6","type":"function","z":"a3b70a95.71cd58","name":"client filter","func":"try {\n    var n = MAIN.usercanvas;\n    return msg;\n} catch(err) {\n    return null;\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":380,"y":460,"wires":[["3ef7cd29.6aa472"]]},{"id":"3ef7cd29.6aa472","type":"function","z":"a3b70a95.71cd58","name":"check init","func":"var isInit = flow.get(\"VIS0InitDone\");\nif(!isInit) {\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":540,"y":460,"wires":[["7911e484.5ef57c"]]},{"id":"7911e484.5ef57c","type":"function","z":"a3b70a95.71cd58","name":"calc dist","func":"//flow.set(\"VIS0Dist\", \"far\");\nvar distState = flow.get(\"VIS0Dist\");\n\nnode.warn(\"proxemics ...\")\n\nvar maincam = MAIN.UE.Camera.main;\nif(maincam != null) {\n    \n    node.warn(\"proxemics ... 1\")\n    \n    //get cur head pose\n    var T = maincam.transform.position;\n    \n    node.warn(\"proxemics ... 2\")\n    \n    // get vis position\n    var chartId = flow.get(\"VIS0\");\n    msg.payload = chartId;\n    \n    var chart = MAIN.usercanvas.charts2[chartId];\n    \n    node.warn(\"proxemics ... 3 chartId=\" + chartId);\n    \n    var Tg = chart.chartGo.transform.position;\n    \n    node.warn(\"proxemics ... 4\")\n    \n    \n    var dist =\n    Math.sqrt(\n        (T.x - Tg.x) * (T.x - Tg.x) +\n        (T.y - Tg.y) * (T.y - Tg.y) +\n        (T.z - Tg.z) * (T.z - Tg.z)\n    );\n    msg.dist = dist;\n    \n    node.warn(\"proxemics dist = \" + dist);\n    \n    if(dist < 1) {\n        if(distState != 2) {\n            distState = 2;\n            flow.set(\"VIS0Dist\", 2);\n            node.warn(\"proxemics distState= \" + distState);\n            node.send([null, null, msg]);\n            return null;\n        }\n    } else if(dist < 3) {\n        if(distState != 1) {\n            distState = 1;\n            flow.set(\"VIS0Dist\", 1);\n            node.warn(\"proxemics distState= \" + distState);\n            node.send([null, msg, null]);\n            return null;\n        }\n    } else {\n        if(distState != 0) {\n            distState = 0;\n            flow.set(\"VIS0Dist\", 0);\n            node.warn(\"proxemics distState= \" + distState);\n            node.send([msg, null, null]);\n            return null;\n        }\n    }\n}\nreturn null;","outputs":3,"noerr":0,"initialize":"","finalize":"","x":700,"y":460,"wires":[["e16b5094.1b74b"],["1e150961.a06637"],["309fbb10.0806c4"]]},{"id":"309fbb10.0806c4","type":"function","z":"a3b70a95.71cd58","name":"Closest JSON","func":"var visData = \n{\n    \"UID\":\"\",\n    \"VisualisationType\":\"SCATTERPLOT\",\n    \"parallelCoordinatesDimensionsAttributes\":[],\n    \"parallelCoordinatesDimensionsMinFilter\":[],\n    \"parallelCoordinatesDimensionsMaxFilter\":[],\n    \"parallelCoordinatesDimensionsMinScale\":[],\n    \"parallelCoordinatesDimensionsMaxScale\":[],\n    \"Geometry\": 6, //bars\n    \"AxiesKeys\":[0, 1],\n    \"AxiesValues\":[\"device\",\"temperature\"],\n    \"ColourDimension\":\"device\",\n    \"SizeDimension\":\"temperature\",\n    \"LinkingDimension\":\"Undefined\",\n    \"colourKeys\":\n    {\n        \"serializedVersion\":\"2\",\n        \"key0\":{\"r\":1.0,\"g\":1.0,\"b\":0.0,\"a\":1.0},\n        \"key1\":{\"r\":0.0,\"g\":1.0,\"b\":0.0,\"a\":0.5},\n        \"key2\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key3\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key4\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key5\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key6\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key7\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"ctime0\":0,\"ctime1\":65535,\"ctime2\":0,\"ctime3\":0,\"ctime4\":0,\"ctime5\":0,\"ctime6\":0,\"ctime7\":0,\n        \"atime0\":0,\"atime1\":65535,\"atime2\":0,\"atime3\":0,\"atime4\":0,\"atime5\":0,\"atime6\":0,\"atime7\":0,\n        \"m_Mode\":0,\n        \"m_NumColorKeys\":2,\n        \"m_NumAlphaKeys\":2\n    },\n    \"colour\":{\"r\":0.0,\"g\":0.0,\"b\":1.0,\"a\":0.5},\n    \"Size\":0.3,\n    \"MinSize\":0.01,\n    \"MaxSize\":0.2,\n    \"VisualisationWidth\": 0.3,\n    \"VisualisationHeight\": 0.3,\n    \"VisualisationDepth\": 0.3\n};\nmsg.json = visData;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":980,"y":500,"wires":[["5c948d7b.296ab4","12f710d3.8c964f"]]},{"id":"5c948d7b.296ab4","type":"function","z":"a3b70a95.71cd58","name":"apply json","func":"node.warn(\"applying json msg.payload = \" + msg.payload);\n\nvar chartId = flow.get(\"VIS0\");\n//var chartId = msg.payload;\n\ntry {\n    node.warn(\"applying json chartId = \" + chartId);\n    node.warn(\"applying json ... #charts=\" + MAIN.usercanvas.charts.length);\n    \n    var chart = MAIN.usercanvas.charts2[chartId];\n    \n    node.warn(\"applying json ... 1 chart=\" + chart);\n    \n    var json = JSON.stringify(msg.json);\n    \n    node.warn(\"applying json ... 2 json => \" + json);\n    \n    \n    if(chart != null) {\n        if(chart.vis != null) {\n            if(chart.vis.theVisualizationObject != null) {\n                if(chart.vis.theVisualizationObject.creationConfiguration != null) {\n                    //all good here\n                } else node.warn(\"ERROR applying json ... 2 creationConfiguration is null \");\n            } else node.warn(\"ERROR applying json ... 2 theVisualizationObject is null \");\n        } else node.warn(\"ERROR applying json ... 2 vis is null \");\n    } else node.warn(\"ERROR applying json ... 2 chart is null \");\n    \n    node.warn(\"applying json ... 2b \");\n    \n    chart.vis.theVisualizationObject.creationConfiguration.DeserializeJson(json);\n    importNamespace(\"IATK\").Replicator.SyncVis(chart.vis);\n    \n    \n    chart.vis.updateProperties();\n    chart.fctUpdateChart();\n    node.warn(\"applying json ... 7\");\n    \n} catch(err) {\n    node.warn(\"CNR ERROR applying json => \" + err);\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1240,"y":500,"wires":[["8818c24a.9ae4f"]]},{"id":"8818c24a.9ae4f","type":"debug","z":"a3b70a95.71cd58","name":"PosePull","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1260,"y":560,"wires":[]},{"id":"53c1890.3a2af78","type":"debug","z":"a3b70a95.71cd58","name":"distState 0","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1250,"y":360,"wires":[]},{"id":"12f710d3.8c964f","type":"debug","z":"a3b70a95.71cd58","name":"distState 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1250,"y":440,"wires":[]},{"id":"1e150961.a06637","type":"function","z":"a3b70a95.71cd58","name":"Mid JSON","func":"var visData = \n{\n    \"UID\":\"\",\n    \"VisualisationType\":\"SCATTERPLOT\",\n    \"parallelCoordinatesDimensionsAttributes\":[],\n    \"parallelCoordinatesDimensionsMinFilter\":[],\n    \"parallelCoordinatesDimensionsMaxFilter\":[],\n    \"parallelCoordinatesDimensionsMinScale\":[],\n    \"parallelCoordinatesDimensionsMaxScale\":[],\n    \"Geometry\": 3, //quads\n    \"AxiesKeys\":[0, 1],\n    \"AxiesValues\":[\"device\",\"temperature\"],\n    \"ColourDimension\":\"temperature\",\n    \"SizeDimension\":\"Undefined\",\n    \"LinkingDimension\":\"Undefined\",\n    \"colourKeys\":\n    {\n        \"serializedVersion\":\"2\",\n        \"key0\":{\"r\":1.0,\"g\":1.0,\"b\":0.0,\"a\":1.0},\n        \"key1\":{\"r\":0.0,\"g\":1.0,\"b\":0.0,\"a\":0.5},\n        \"key2\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key3\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key4\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key5\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key6\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key7\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"ctime0\":0,\"ctime1\":65535,\"ctime2\":0,\"ctime3\":0,\"ctime4\":0,\"ctime5\":0,\"ctime6\":0,\"ctime7\":0,\n        \"atime0\":0,\"atime1\":65535,\"atime2\":0,\"atime3\":0,\"atime4\":0,\"atime5\":0,\"atime6\":0,\"atime7\":0,\n        \"m_Mode\":0,\n        \"m_NumColorKeys\":2,\n        \"m_NumAlphaKeys\":2\n    },\n    \"colour\":{\"r\":0.0,\"g\":0.0,\"b\":1.0,\"a\":0.5},\n    \"Size\":0.3,\n    \"MinSize\":0.01,\n    \"MaxSize\":0.2,\n    \"VisualisationWidth\": 0.3,\n    \"VisualisationHeight\": 0.3,\n    \"VisualisationDepth\": 0.3\n};\nmsg.json = visData;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":970,"y":460,"wires":[["5c948d7b.296ab4","38b7a6f6.94024a"]]},{"id":"38b7a6f6.94024a","type":"debug","z":"a3b70a95.71cd58","name":"distState 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1250,"y":400,"wires":[]},{"id":"e16b5094.1b74b","type":"function","z":"a3b70a95.71cd58","name":"Farthest JSON","func":"var visData = \n{\n    \"UID\":\"\",\n    \"VisualisationType\":\"SCATTERPLOT\",\n    \"parallelCoordinatesDimensionsAttributes\":[],\n    \"parallelCoordinatesDimensionsMinFilter\":[],\n    \"parallelCoordinatesDimensionsMaxFilter\":[],\n    \"parallelCoordinatesDimensionsMinScale\":[],\n    \"parallelCoordinatesDimensionsMaxScale\":[],\n    \"Geometry\": 1, //points\n    \"AxiesKeys\":[0, 1],\n    \"AxiesValues\":[\"device\",\"temperature\"],\n    \"ColourDimension\":\"Undefined\",\n    \"SizeDimension\":\"Undefined\",\n    \"LinkingDimension\":\"Undefined\",\n    \"colourKeys\":\n    {\n        \"serializedVersion\":\"2\",\n        \"key0\":{\"r\":0.0,\"g\":0.0,\"b\":1.0,\"a\":1.0},\n        \"key1\":{\"r\":1.0,\"g\":0.0,\"b\":0.0,\"a\":0.5},\n        \"key2\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key3\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key4\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key5\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key6\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key7\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"ctime0\":0,\"ctime1\":65535,\"ctime2\":0,\"ctime3\":0,\"ctime4\":0,\"ctime5\":0,\"ctime6\":0,\"ctime7\":0,\n        \"atime0\":0,\"atime1\":65535,\"atime2\":0,\"atime3\":0,\"atime4\":0,\"atime5\":0,\"atime6\":0,\"atime7\":0,\n        \"m_Mode\":0,\n        \"m_NumColorKeys\":2,\n        \"m_NumAlphaKeys\":2\n    },\n    \"colour\":{\"r\":0.0,\"g\":0.0,\"b\":1.0,\"a\":0.5},\n    \"Size\":0.5,\n    \"MinSize\":0.02,\n    \"MaxSize\":0.4,\n    \"VisualisationWidth\":0.3,\n    \"VisualisationHeight\":0.3,\n    \"VisualisationDepth\":0.3\n};\nmsg.json = visData;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":980,"y":420,"wires":[["5c948d7b.296ab4","53c1890.3a2af78"]]},{"id":"73e9a24f.21590c","type":"mqtt-broker","name":"","broker":"ragrug-mqtt","port":"1883","clientid":"nodered","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]