[{"id":"f3784d00.40ef8","type":"tab","label":"clientside","disabled":false,"info":""},{"id":"334ae29d.b25c8e","type":"function","z":"f3784d00.40ef8","name":"B","func":"var visData = \n{\n    \"UID\":\"\",\n    \"VisualisationType\":\"SCATTERPLOT\",\n    \"parallelCoordinatesDimensionsAttributes\":[],\n    \"parallelCoordinatesDimensionsMinFilter\":[],\n    \"parallelCoordinatesDimensionsMaxFilter\":[],\n    \"parallelCoordinatesDimensionsMinScale\":[],\n    \"parallelCoordinatesDimensionsMaxScale\":[],\n    \"Geometry\":4,\n    \"AxiesKeys\":[0,1],\n    \"AxiesValues\":[\"id\",\"temperature\"],\n    \"ColourDimension\":\"temperature\",\n    \"SizeDimension\":\"Undefined\",\n    \"LinkingDimension\":\"names\",\n    \"colourKeys\":\n    {\n        \"serializedVersion\":\"2\",\n        \"key0\":{\"r\":1.0,\"g\":0.0,\"b\":0.0,\"a\":1.0},\n        \"key1\":{\"r\":0.0,\"g\":1.0,\"b\":0.0,\"a\":0.5},\n        \"key2\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key3\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key4\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key5\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key6\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key7\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"ctime0\":0,\"ctime1\":65535,\"ctime2\":0,\"ctime3\":0,\"ctime4\":0,\"ctime5\":0,\"ctime6\":0,\"ctime7\":0,\n        \"atime0\":0,\"atime1\":65535,\"atime2\":0,\"atime3\":0,\"atime4\":0,\"atime5\":0,\"atime6\":0,\"atime7\":0,\n        \"m_Mode\":0,\n        \"m_NumColorKeys\":2,\n        \"m_NumAlphaKeys\":2\n    },\n    \"colour\":{\"r\":0.0,\"g\":0.0,\"b\":1.0,\"a\":0.5},\n    \"Size\":0.2,\n    \"MinSize\":0.04,\n    \"MaxSize\":0.2,\n    \"VisualisationWidth\":0.3,\n    \"VisualisationHeight\":0.3,\n    \"VisualisationDepth\":0.3\n};\nmsg.payload = visData;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":700,"wires":[["b912fc76.d9bd7"]]},{"id":"7f0984a6.5f5cfc","type":"inject","z":"f3784d00.40ef8","name":"A","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":130,"y":700,"wires":[["334ae29d.b25c8e"]]},{"id":"b912fc76.d9bd7","type":"function","z":"f3784d00.40ef8","name":"C","func":"try {\n    console.log(\"INIT IATK from NR ... 1\");\n    //var nextId = Main_GetNextChartId();\n    var nextId = RT.Help.CreateGuid();\n    \n    flow.set(\"jsonchart\", nextId);\n    \n    console.log(\"INIT IATK from NR ... 2\");\n    var chartObj = RT.VIS.GetNewChartObjectIATK2(\n        nextId, \n        MAIN.usercanvas.charts.length,\n        \"IATKChart\", \n        MAIN.usercanvas.canvasSize, \n        MAIN.usercanvas.canvasSpacedSize,\n        false);\n\n    MAIN.usercanvas.charts2[nextId] = chartObj;\n    MAIN.RR.Runtime.ToggleObjManipulation(chartObj.chartGoName);\n\n    chartObj.rtds.AddDimension(\"temperature\", 0, 15);\n    chartObj.rtds.SetDataStrVal(\"temperature\", 7);\n    chartObj.abstractVisualisation.UpdateVisualisation(chartObj.PropertyType.Y);\n        \n    //apply json here\n    var json = JSON.stringify(msg.payload);\n    chartObj.vis.theVisualizationObject.creationConfiguration.DeserializeJson(json);\n    \n    //update from json\n    importNamespace(\"IATK\").Replicator.SyncVis(chartObj.vis);\n    chart.fctUpdateChart();\n    chart.vis.updateProperties();\n    \n    msg.payload = nextId;\n} catch(err) {\n    var strmsg = \"trying to run client side code ... => \" + err;\n    msg.payload = strmsg;\n    node.warn(\"C => \" + strmsg);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":700,"wires":[[]]},{"id":"d49aaca1.de2cd","type":"mqtt in","z":"f3784d00.40ef8","name":"F","topic":"telemetry/inffeld16/2nd/id2068/thermometer/this/SENSOR","qos":"0","datatype":"auto","broker":"73e9a24f.21590c","x":110,"y":760,"wires":[["3e2bb6db.f1bf7a"]]},{"id":"449d1ecb.e8f78","type":"function","z":"f3784d00.40ef8","name":"J","func":"//\"{\"Time\":\"2021-08-17T07:31:36\",\"BME280\":{\"Temperature\":26.1,\"Humidity\":47.2,\"DewPoint\":14.0,\"Pressure\":973.8},\"SR04\":{\"Distance\":59.368},\"PressureUnit\":\"hPa\",\"TempUnit\":\"C\"}\"\n\nvar data = msg.payload;\nvar temperature = data.BME280.Temperature;\nvar humidity = data.BME280.Humidity;\nvar distance = data.SR04.Distance;\nvar chartId = flow.get(\"jsonchart\");\n\ntry {\n    var chart = MAIN.usercanvas.charts2[chartId];\n    //chart.rtds.SetDataStrVal(\"distance\", distance);\n    chart.rtds.SetDataStrVal(\"temperature\", temperature);\n    chart.fctUpdateChart();\n} catch(err) {\n    node.warn(\"CNR J ERROR (maybe trying to run client code?) => \" + err);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":770,"y":760,"wires":[["3094ed8d.b3a732"]]},{"id":"3094ed8d.b3a732","type":"debug","z":"f3784d00.40ef8","name":"K","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":910,"y":760,"wires":[]},{"id":"953e515f.53791","type":"mqtt in","z":"f3784d00.40ef8","name":"G","topic":"telemetry/inffeld16/2nd/id2068/thermometer/this/STATUS8","qos":"0","datatype":"auto","broker":"73e9a24f.21590c","x":110,"y":820,"wires":[["c17f5e52.8026c"]]},{"id":"c17f5e52.8026c","type":"function","z":"f3784d00.40ef8","name":"I","func":"var data = JSON.parse(msg.payload);\nmsg.payload = data.StatusSNS;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":820,"wires":[["449d1ecb.e8f78"]]},{"id":"3e2bb6db.f1bf7a","type":"function","z":"f3784d00.40ef8","name":"H","func":"var data = JSON.parse(msg.payload);\nmsg.payload = data;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":760,"wires":[["449d1ecb.e8f78"]]},{"id":"f95ba810.412d48","type":"function","z":"f3784d00.40ef8","name":"E","func":"\nvar chartId = flow.get(\"jsonchart\");\n\ntry {\n    var chart = MAIN.usercanvas.charts2[chartId];\n    \n    \n    //Move to HUD\n    var hT = MAIN.camHookGo.transform.position;\n    var hR = MAIN.camHookGo.transform.rotation;\n    var T = [hT.x, hT.y, hT.z];\n    var R = [hR.x, hR.y, hR.z, hR.w];\n    RT.Unity.SetPose(chart.chartGo, T, R, null);\n    //RT.Unity.SetParent(chart.chartGo, MAIN.camHookGo);\n    //RT.Unity.SetLocalPose(chart.chartGo, [0,-0.1,0], null, null);\n    \n    var bc = MAIN.RR.Runtime.AddBoxCollider(chart.chartGo);\n    bc.size = new MAIN.UE.Vector3(0.3, 0.3, 0.3);\n    \n    /*\n    //Move to Palm\n    var targetGo = MAIN.UE.GameObject.Find(\"MyRightTip\");\n    //var targetGo = MAIN.palmHandMenuGo;\n    var hT = MAIN.camHookGo.transform.position;\n    var hR = MAIN.camHookGo.transform.rotation;\n    var T = [hT.x, hT.y, hT.z];\n    var R = [hR.x, hR.y, hR.z, hR.w];\n    RT.Unity.SetPose(chart.chartGo, T, R, null);\n    RT.Unity.SetParent(chart.chartGo, targetGo);\n    RT.Unity.SetLocalPose(chart.chartGo, [0,0,0], null, null);\n    */\n} catch(err) {\n    node.warn(\"CNR E ERROR (maybe trying to run client code?) => \" + err);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":910,"y":700,"wires":[[]]},{"id":"b5998a95.ffe038","type":"inject","z":"f3784d00.40ef8","name":"D","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"7","topic":"","payload":"","payloadType":"date","x":770,"y":700,"wires":[["f95ba810.412d48"]]},{"id":"94441447.141678","type":"function","z":"f3784d00.40ef8","name":"B","func":"var visData = \n{\n    \"UID\":\"\",\n    \"VisualisationType\":\"SCATTERPLOT\",\n    \"parallelCoordinatesDimensionsAttributes\":[],\n    \"parallelCoordinatesDimensionsMinFilter\":[],\n    \"parallelCoordinatesDimensionsMaxFilter\":[],\n    \"parallelCoordinatesDimensionsMinScale\":[],\n    \"parallelCoordinatesDimensionsMaxScale\":[],\n    \"Geometry\":4,\n    \"AxiesKeys\":[0,1],\n    \"AxiesValues\":[\"id\",\"distance\"],\n    \"ColourDimension\":\"distance\",\n    \"SizeDimension\":\"Undefined\",\n    \"LinkingDimension\":\"names\",\n    \"colourKeys\":\n    {\n        \"serializedVersion\":\"2\",\n        \"key0\":{\"r\":1.0,\"g\":0.0,\"b\":0.0,\"a\":1.0},\n        \"key1\":{\"r\":0.0,\"g\":1.0,\"b\":0.0,\"a\":0.5},\n        \"key2\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key3\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key4\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key5\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key6\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"key7\":{\"r\":0.0,\"g\":0.0,\"b\":0.0,\"a\":0.0},\n        \"ctime0\":0,\"ctime1\":65535,\"ctime2\":0,\"ctime3\":0,\"ctime4\":0,\"ctime5\":0,\"ctime6\":0,\"ctime7\":0,\n        \"atime0\":0,\"atime1\":65535,\"atime2\":0,\"atime3\":0,\"atime4\":0,\"atime5\":0,\"atime6\":0,\"atime7\":0,\n        \"m_Mode\":0,\n        \"m_NumColorKeys\":2,\n        \"m_NumAlphaKeys\":2\n    },\n    \"colour\":{\"r\":0.0,\"g\":0.0,\"b\":1.0,\"a\":0.5},\n    \"Size\":0.2,\n    \"MinSize\":0.04,\n    \"MaxSize\":0.2,\n    \"VisualisationWidth\":0.3,\n    \"VisualisationHeight\":0.3,\n    \"VisualisationDepth\":0.3\n};\nmsg.payload = visData;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":940,"wires":[["e70543b7.f621b"]]},{"id":"a8afdad3.52bf38","type":"inject","z":"f3784d00.40ef8","name":"A","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":130,"y":940,"wires":[["94441447.141678"]]},{"id":"e70543b7.f621b","type":"function","z":"f3784d00.40ef8","name":"C","func":"try {\n    console.log(\"INIT IATK from NR ... 1\");\n    //var nextId = Main_GetNextChartId();\n    var nextId = RT.Help.CreateGuid();\n    \n    flow.set(\"coolchart\", nextId);\n    flow.set(\"fridgealarm\", false);\n    \n    console.log(\"INIT IATK from NR ... 2\");\n    var chartObj = RT.VIS.GetNewChartObjectIATK2(\n        nextId, \n        MAIN.usercanvas.charts.length,\n        \"IATKChart\", \n        MAIN.usercanvas.canvasSize, \n        MAIN.usercanvas.canvasSpacedSize,\n        false);\n\n    MAIN.usercanvas.charts2[nextId] = chartObj;\n    MAIN.RR.Runtime.ToggleObjManipulation(chartObj.chartGoName);\n\n    chartObj.rtds.AddDimension(\"distance\", 0, 300);\n    chartObj.rtds.SetDataStrVal(\"distance\", 250);\n    \n    chartObj.abstractVisualisation.UpdateVisualisation(chartObj.PropertyType.Y);\n        \n    //apply json here\n    var json = JSON.stringify(msg.payload);\n    chartObj.vis.theVisualizationObject.creationConfiguration.DeserializeJson(json);\n    \n    //update from json\n    importNamespace(\"IATK\").Replicator.SyncVis(chartObj.vis);\n    chartObj.fctUpdateChart();\n    chartObj.vis.updateProperties();\n    \n    msg.payload = nextId;\n} catch(err) {\n    var strmsg = \"trying to run client side code ... => \" + err;\n    msg.payload = strmsg;\n    node.warn(\"C => \" + strmsg);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":940,"wires":[[]]},{"id":"7de85065.07f58","type":"mqtt in","z":"f3784d00.40ef8","name":"F","topic":"telemetry/inffeld16/2nd/id2068/thermometer/this/SENSOR","qos":"0","datatype":"auto","broker":"73e9a24f.21590c","x":110,"y":1000,"wires":[["bf82f21c.be593","955bf6c6.ccfe2"]]},{"id":"58ed8784.a8c4e8","type":"function","z":"f3784d00.40ef8","name":"J","func":"//\"{\"Time\":\"2021-08-17T07:31:36\",\"BME280\":{\"Temperature\":26.1,\"Humidity\":47.2,\"DewPoint\":14.0,\"Pressure\":973.8},\"SR04\":{\"Distance\":59.368},\"PressureUnit\":\"hPa\",\"TempUnit\":\"C\"}\"\n\nvar data = msg.payload;\nvar temperature = data.BME280.Temperature;\nvar humidity = data.BME280.Humidity;\nvar distance = data.SR04.Distance;\nvar chartId = flow.get(\"coolchart\");\n\ntry {\n    var chart = MAIN.usercanvas.charts2[chartId];\n    chart.rtds.SetDataStrVal(\"distance\", distance);\n    //chart.rtds.SetDataStrVal(\"temperature\", temperature);\n    chart.fctUpdateChart();\n} catch(err) {\n    node.warn(\"CNR J ERROR (maybe trying to run client code?) => \" + err);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":770,"y":1000,"wires":[["85055f40.7c2f"]]},{"id":"85055f40.7c2f","type":"debug","z":"f3784d00.40ef8","name":"K","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":910,"y":1000,"wires":[]},{"id":"87569ab5.f502a8","type":"mqtt in","z":"f3784d00.40ef8","name":"G","topic":"telemetry/inffeld16/2nd/id2068/thermometer/this/STATUS8","qos":"0","datatype":"auto","broker":"73e9a24f.21590c","x":110,"y":1060,"wires":[["36eade6a.3b4a42","955bf6c6.ccfe2"]]},{"id":"36eade6a.3b4a42","type":"function","z":"f3784d00.40ef8","name":"I","func":"var data = JSON.parse(msg.payload);\nmsg.payload = data.StatusSNS;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":1060,"wires":[["58ed8784.a8c4e8","52433094.679b8"]]},{"id":"bf82f21c.be593","type":"function","z":"f3784d00.40ef8","name":"H","func":"var data = JSON.parse(msg.payload);\nmsg.payload = data;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":1000,"wires":[["58ed8784.a8c4e8","52433094.679b8"]]},{"id":"4759b99d.1c4928","type":"function","z":"f3784d00.40ef8","name":"E","func":"\nvar chartId = flow.get(\"coolchart\");\n\ntry {\n    var chart = MAIN.usercanvas.charts2[chartId];\n    \n    \n    //Move to HUD\n    var hT = MAIN.camHookGo.transform.position;\n    var hR = MAIN.camHookGo.transform.rotation;\n    var T = [hT.x, hT.y, hT.z];\n    var R = [hR.x, hR.y, hR.z, hR.w];\n    RT.Unity.SetPose(chart.chartGo, T, R, null);\n    //RT.Unity.SetParent(chart.chartGo, MAIN.camHookGo);\n    //RT.Unity.SetLocalPose(chart.chartGo, [0,-0.1,0], null, null);\n    \n    var bc = MAIN.RR.Runtime.AddBoxCollider(chart.chartGo);\n    bc.size = new MAIN.UE.Vector3(0.3, 0.3, 0.3);\n    \n    /*\n    //Move to Palm\n    var targetGo = MAIN.UE.GameObject.Find(\"MyRightTip\");\n    //var targetGo = MAIN.palmHandMenuGo;\n    var hT = MAIN.camHookGo.transform.position;\n    var hR = MAIN.camHookGo.transform.rotation;\n    var T = [hT.x, hT.y, hT.z];\n    var R = [hR.x, hR.y, hR.z, hR.w];\n    RT.Unity.SetPose(chart.chartGo, T, R, null);\n    RT.Unity.SetParent(chart.chartGo, targetGo);\n    RT.Unity.SetLocalPose(chart.chartGo, [0,0,0], null, null);\n    */\n} catch(err) {\n    node.warn(\"CNR E ERROR (maybe trying to run client code?) => \" + err);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":910,"y":940,"wires":[[]]},{"id":"a5f6c0ba.b5f7c","type":"inject","z":"f3784d00.40ef8","name":"D","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"7","topic":"","payload":"","payloadType":"date","x":770,"y":940,"wires":[["4759b99d.1c4928"]]},{"id":"52433094.679b8","type":"function","z":"f3784d00.40ef8","name":"L","func":"var data = msg.payload;\nvar distance = data.SR04.Distance;\nvar falarm_old = flow.get(\"fridgealarm\");\ntry {\n    if(distance > 35) {\n        //PlayClick();\n        PlayNotification();\n        if(falarm_old == false) {\n            flow.set(\"fridgealarm\", true);\n            msg.payload = true;\n            RT.Unity.SpawnAlert(45, \"Alarm!</br> Fridde door open!\");\n            return msg.payload;\n        }\n    } else {\n        if(falarm_old == true) {\n            flow.set(\"fridgealarm\", false);\n            msg.payload = false;\n            var PUI = importNamespace(\"PowerUI\");\n            var wu = PUI.WorldUI.Find(\"WU_ALERT\");\n            if(wu != null) {\n                wu.Expire();\n            }\n            return msg.payload;\n        }\n    }\n} catch(err) {\n    node.warn(\"CNR J ERROR (maybe trying to run client code?) => \" + err);\n}\n\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":770,"y":1060,"wires":[[]]},{"id":"271e879d.534708","type":"comment","z":"f3784d00.40ef8","name":"Distatnce","info":"","x":120,"y":900,"wires":[]},{"id":"ed3b88b6.65fd88","type":"comment","z":"f3784d00.40ef8","name":"Temperature","info":"","x":130,"y":660,"wires":[]},{"id":"955bf6c6.ccfe2","type":"debug","z":"f3784d00.40ef8","name":"K","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":410,"y":1120,"wires":[]},{"id":"73e9a24f.21590c","type":"mqtt-broker","name":"","broker":"ragrug-mqtt","port":"1883","clientid":"nodered","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]